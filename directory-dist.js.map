{"version":3,"sources":["directory.js"],"names":["Filters","props","updateCategory","evt","updateCategoryState","target","value","currentCategory","List","state","listItems","bind","sortByTopRated","sortByPopularity","sortByNowPlaying","$","on","toggleClass","next","getList","setState","rootURL","key","lang","excludeAdult","excludeVideo","page","primaryYear","requestURL","concat","fetch","then","data","json","dataset","movies","results","movieList","forEach","movieElement","movieListItem","title","release_date","vote_average","popularity","poster_path","overview","push","sortBy","topRatedMovies","movieListTopRated","popularMovies","movieListPopular","region","date","moment","maxDate","format","minDate","subtract","primaryReleaseDateMin","primaryReleaseDateMax","withReleaseType","nowPlayingMovies","movieListNowPlaying","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\r\n  \"use strict\";\r\n\r\n  function Filters(props) {\r\n    function updateCategory(evt) {\r\n      props.updateCategoryState(evt.target.value);\r\n    }\r\n\r\n    return (\r\n      <form action=\"\" id=\"directory-filters\" className=\"filters-class\">\r\n        <div>\r\n          <label htmlFor=\"select-category\">Sort by: </label>\r\n          <select name=\"select_category\" id=\"select-category\" value={props.currentCategory} onChange={updateCategory}>\r\n            <option value=\"\">- Category -</option>\r\n            <option value=\"now-playing\" key=\"now-playing\">Now Playing</option>\r\n            <option value=\"popular\" key=\"popular\">Popular</option>\r\n            <option value=\"top-rated\" key=\"top-rated\">Top Rated</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  class List extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        listItems: '',\r\n        currentCategory: ''\r\n      };\r\n\r\n      this.updateCategoryState = this.updateCategoryState.bind(this);\r\n\r\n      this.sortByTopRated = this.sortByTopRated.bind(this);\r\n      this.sortByPopularity = this.sortByPopularity.bind(this);\r\n      this.sortByNowPlaying = this.sortByNowPlaying.bind(this);\r\n\r\n      $(function() {\r\n        $(\"tr.external\").on(\"click\", function() {\r\n          $(this).toggleClass(\"expand\").next(\".internal\").toggleClass(\"expand\");\r\n        });\r\n      });\r\n      this.getList();\r\n    }\r\n\r\n    updateCategoryState(value) {\r\n      this.setState(\r\n        {currentCategory: value}, function() {\r\n          if (this.state.currentCategory == \"top-rated\") {\r\n            this.sortByTopRated();\r\n          } else if (this.state.currentCategory == \"popular\") {\r\n            this.sortByPopularity();\r\n          } else if (this.state.currentCategory == \"now-playing\") {\r\n            this.sortByNowPlaying();\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    getList() {\r\n      var rootURL = 'https://api.themoviedb.org/3/discover/movie?api_key=';\r\n      var key = '2403c0693916992487dd5abda2003c5f';\r\n      var lang = '&language=en-US';\r\n      var excludeAdult = '&include_adult=false';\r\n      var excludeVideo = '&include_video=false';\r\n      var page = '&page=1';\r\n      var primaryYear = '&primary_release_year=2018';\r\n\r\n        var requestURL = \"\".concat(rootURL, key, lang, excludeAdult, excludeVideo, page, primaryYear);\r\n        fetch(requestURL)\r\n        .then(function(data) {\r\n          return data.json();\r\n        })\r\n        .then(function(dataset) {\r\n          var movies = dataset.results;\r\n          var movieList = [];\r\n          movies.forEach(function(movieElement) {\r\n            var movieListItem = (\r\n              <React.Fragment>\r\n                <tr className=\"external\">\r\n                  <td>\r\n                    {movieElement.title}\r\n                  </td>\r\n                  <td>\r\n                    {movieElement.release_date}\r\n                  </td>\r\n                  <td>\r\n                    {movieElement.vote_average}\r\n                  </td>\r\n                  <td>\r\n                    {movieElement.popularity}\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"internal\">\r\n                  <td>\r\n                    <img src={\"https://image.tmdb.org/t/p/w92\" + movieElement.poster_path} alt=\"movie poster\" />\r\n                  </td>\r\n                  <td colSpan={3}>\r\n                    {movieElement.overview}\r\n                  </td>\r\n                </tr>\r\n              </React.Fragment>\r\n            )\r\n            movieList.push(movieListItem);\r\n          })\r\n\r\n          this.setState({listItems: movieList});\r\n\r\n        }.bind(this))\r\n    }\r\n\r\n    // sort movie list by top rated\r\n    sortByTopRated() {\r\n      var rootURL = 'https://api.themoviedb.org/3/discover/movie?api_key=';\r\n      var key = '2403c0693916992487dd5abda2003c5f';\r\n      var lang = '&language=en-US';\r\n      var sortBy = '&sort_by=vote_average.desc';\r\n      var excludeAdult = '&include_adult=false';\r\n      var excludeVideo = '&include_video=false';\r\n      var page = '&page=1';\r\n      var primaryYear = '&primary_release_year=2018';\r\n\r\n      var requestURL = \"\".concat(rootURL, key, lang, sortBy, excludeAdult, excludeVideo, page, primaryYear);\r\n      fetch(requestURL)\r\n      .then(function(data) {\r\n          return data.json();\r\n      })\r\n      .then(function(dataset) {\r\n      var topRatedMovies = dataset.results;\r\n\r\n      var movieListTopRated = [];\r\n      topRatedMovies.forEach(function(movieElement) {\r\n        var movieListItem = (\r\n            <React.Fragment>\r\n              <tr className=\"external\">\r\n                <td>\r\n                  {movieElement.title}\r\n                </td>\r\n                <td>\r\n                  {movieElement.release_date}\r\n                </td>\r\n                <td>\r\n                  {movieElement.vote_average}\r\n                </td>\r\n                <td>\r\n                  {movieElement.popularity}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"internal\">\r\n                <td>\r\n                  <img src={\"https://image.tmdb.org/t/p/w92\" + movieElement.poster_path} alt=\"movie poster\" />\r\n                </td>\r\n                <td colSpan={3}>\r\n                  {movieElement.overview}\r\n                </td>\r\n              </tr>\r\n            </React.Fragment>\r\n        )\r\n        movieListTopRated.push(movieListItem);\r\n      })\r\n\r\n      this.setState({listItems: movieListTopRated});\r\n\r\n    }.bind(this))\r\n  }\r\n\r\n  // sort movie list by popularity\r\n  sortByPopularity() {\r\n    var rootURL = 'https://api.themoviedb.org/3/discover/movie?api_key=';\r\n    var key = '2403c0693916992487dd5abda2003c5f';\r\n    var lang = '&language=en-US';\r\n    var sortBy = '&sort_by=popularity.desc';\r\n    var excludeAdult = '&include_adult=false';\r\n    var excludeVideo = '&include_video=false';\r\n    var page = '&page=1';\r\n    var primaryYear = '&primary_release_year=2018';\r\n\r\n    var requestURL = \"\".concat(rootURL, key, lang, sortBy, excludeAdult, excludeVideo, page, primaryYear);\r\n    fetch(requestURL)\r\n    .then(function(data) {\r\n        return data.json();\r\n    })\r\n    .then(function(dataset) {\r\n    var popularMovies = dataset.results;\r\n\r\n    var movieListPopular = [];\r\n    popularMovies.forEach(function(movieElement) {\r\n      var movieListItem = (\r\n          <React.Fragment>\r\n            <tr className=\"external\">\r\n              <td>\r\n                {movieElement.title}\r\n              </td>\r\n              <td>\r\n                {movieElement.release_date}\r\n              </td>\r\n              <td>\r\n                {movieElement.vote_average}\r\n              </td>\r\n              <td>\r\n                {movieElement.popularity}\r\n              </td>\r\n            </tr>\r\n            <tr className=\"internal\">\r\n              <td>\r\n                <img src={\"https://image.tmdb.org/t/p/w92\" + movieElement.poster_path} alt=\"movie poster\" />\r\n              </td>\r\n              <td colSpan={3}>\r\n                {movieElement.overview}\r\n              </td>\r\n            </tr>\r\n          </React.Fragment>\r\n      )\r\n      movieListPopular.push(movieListItem);\r\n    })\r\n\r\n    this.setState({listItems: movieListPopular});\r\n\r\n  }.bind(this))\r\n}\r\n\r\n  // sort movie list by now playing\r\n  sortByNowPlaying() {\r\n    var rootURL = 'https://api.themoviedb.org/3/discover/movie?api_key=';\r\n    var key = '2403c0693916992487dd5abda2003c5f';\r\n    var lang = '&language=en-US';\r\n    var region = '&region=US';\r\n    var excludeAdult = '&include_adult=false';\r\n    var excludeVideo = '&include_video=false';\r\n    var page = '&page=1';\r\n    var date = moment();\r\n    var maxDate = date.format('YYYY-MM-DD');\r\n    var minDate = date.subtract(28, 'days').format('YYYY-MM-DD');\r\n    var primaryReleaseDateMin = '&primary_release_date.gte=' + minDate;\r\n    var primaryReleaseDateMax = '&primary_release_date.lte=' + maxDate;\r\n    var withReleaseType = '&with_release_type=3';\r\n\r\n    var requestURL = \"\".concat(rootURL, key, lang, region, excludeAdult, excludeVideo, page, primaryReleaseDateMin, primaryReleaseDateMax, withReleaseType);\r\n    fetch(requestURL)\r\n    .then(function(data) {\r\n        return data.json();\r\n    })\r\n    .then(function(dataset) {\r\n    var nowPlayingMovies = dataset.results;\r\n\r\n    var movieListNowPlaying = [];\r\n    nowPlayingMovies.forEach(function(movieElement) {\r\n      var movieListItem = (\r\n          <React.Fragment>\r\n            <tr className=\"external\">\r\n              <td>\r\n                {movieElement.title}\r\n              </td>\r\n              <td>\r\n                {movieElement.release_date}\r\n              </td>\r\n              <td>\r\n                {movieElement.vote_average}\r\n              </td>\r\n              <td>\r\n                {movieElement.popularity}\r\n              </td>\r\n            </tr>\r\n            <tr className=\"internal\">\r\n              <td>\r\n                <img src={\"https://image.tmdb.org/t/p/w92\" + movieElement.poster_path} alt=\"movie poster\" />\r\n              </td>\r\n              <td colSpan={3}>\r\n                {movieElement.overview}\r\n              </td>\r\n            </tr>\r\n          </React.Fragment>\r\n      )\r\n      movieListNowPlaying.push(movieListItem);\r\n    })\r\n\r\n    this.setState({listItems: movieListNowPlaying});\r\n\r\n  }.bind(this))\r\n}\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"movie-list\">\r\n          <div className=\"select-class\">\r\n            <p className=\"instructions\">Sort movies by Now Playing, Popular, and Top Rated using the menu to select a category.</p>\r\n\r\n            <Filters currentCategory={this.state.currentCategory} updateCategoryState={this.updateCategoryState} />\r\n          </div>\r\n\r\n          <table className=\"collapsible-table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Release Date</th>\r\n                <th scope=\"col\">Vote Average</th>\r\n                <th scope=\"col\">Popularity</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.state.listItems}</tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  ReactDOM.render(<List />, document.getElementById('movie-root'));\r\n})();\r\n"]}